---
# Tasks file for mediapeers.aws_nat

# Install and configure AWS CLI:

- name: Install AWS CLI package
  apt:
    name: awscli
    state: present

- name: Creates AWC CLI config directory
  file:
    path: /root/.aws
    state: directory
    owner: root
    group: root
    mode: 0775

- name: Add AWS CLI config for root
  template:
    src: config.j2
    dest: /root/.aws/config
    owner: root
    group: root
    mode: 0600

# ENI management:

- name: Copy files for ubuntu-ec2net utils. This will hotplug the ENI and sets up the interface and routes correctly
  copy:
    src:    "{{ item.src }}"
    dest:   "{{ item.dest }}"
    owner:  root
    mode:   "{{ item.mode }}"
  with_items:
    - { "src": "53-ec2-network-interfaces.rules", "dest": "/etc/udev/rules.d", "mode": 644 }
    - { "src": "75-persistent-net-generator.rules", "dest": "/etc/udev/rules.d", "mode": 644 }
    - { "src": "ec2dhcp", "dest": "/etc/dhcp/dhclient-exit-hooks.d/", "mode": 644 }
    - { "src": "ec2net-functions", "dest": "/etc/network", "mode": 644 }
    - { "src": "ec2net.hotplug", "dest": "/etc/network", "mode": 744 }

- name: Attach the preconfigured NAT network interface (ENI) on bootup for VPC routing (as eth1)
  lineinfile:
    dest: /etc/rc.local
    insertbefore: "exit 0"
    line: "curl --silent {{ aws_meta_endpoint }}/instance-id | xargs /usr/local/bin/aws ec2 attach-network-interface --network-interface-id {{ nat_eni_id }} --region {{ aws_region }} --device-index 1 --instance-id >> /var/log/rc.local.log 2>&1"

# NAT configurations:

- name: Allow IPv4 NAT routing/forwarding
  lineinfile:
    dest: /etc/sysctl.conf
    line: "net.ipv4.ip_forward=1"

- name: Output given subnets
  debug: var=vpc_private_subnets

- name: Add iptables masquerading rule for NAT functionality on bootup
  lineinfile:
    dest: /etc/rc.local
    insertbefore: "exit 0"
    line: "iptables -t nat -A POSTROUTING -o eth1 -s {{ item.cidr_block }} -j MASQUERADE"
  with_items: '{{ vpc_private_subnets }}'

- name: Shutdown network interface eth0 after boot (using eth1 only)
  lineinfile:
    dest: /etc/rc.local
    insertbefore: "exit 0"
    line: "sleep 30 && ifdown eth0"

# For using instance to SSH tunnel into VPC machines:

- name: Allow all ssh-hosts without key checking
  lineinfile:
    dest: /home/ubuntu/.ssh/config
    line: "Host *"
    state: present
    create: true

- lineinfile:
    dest: /home/ubuntu/.ssh/config
    insertafter: "Host *"
    line: "StrictHostKeyChecking no"
    state: present
